{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","selectedGood","selectedButton","isSelected","good","setState","this","className","type","onClick","map","classNames","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oQAKaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAQ,CACNC,aAAc,OAFlB,EAKEC,eAAiB,SAACC,EAAqBC,GAAtB,OAAuC,EAAKC,SAAS,CACpEJ,aAAcE,EAAa,GAAKC,KANpC,4CASE,WAAU,IAAD,OACCH,EAAiBK,KAAKN,MAAtBC,aAER,OACE,uBAAMM,UAAU,oBAAhB,WACKN,GAAgB,oBAAIM,UAAU,QAAd,+BAClBN,GAEG,qBAAIM,UAAU,sCAAd,UACGN,EACA,IAFH,cAKE,wBACE,UAAQ,cACRO,KAAK,SACLD,UAAU,cACVE,QAAS,kBAAM,EAAKJ,SAAS,CAAEJ,aAAc,WAIrD,uBAAOM,UAAU,QAAjB,SACE,gCACGT,EAAMY,KAAI,SAACN,GACV,IAAMD,EAAaF,IAAiBG,EAEpC,OACE,qBAEE,UAAQ,OACRG,UAAWI,IAAW,CACpB,+BAAgCR,IAJpC,UAOE,6BACE,wBACEK,KAAK,SACLC,QAAS,kBAAM,EAAKP,eAAeC,EAAYC,IAC/CG,UAAWI,IACT,SACA,CAAE,UAAWR,IAEf,UAASA,EACL,eACA,YATN,SAWGA,EAAa,IAAM,QAGxB,oBAAI,UAAQ,YAAYI,UAAU,eAAlC,SACGH,MAtBEA,iBArCvB,GAAyBQ,IAAMC,WCnB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ed2af08d.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    selectedGood: 'Jam',\n  };\n\n  selectedButton = (isSelected: boolean, good: string) => this.setState({\n    selectedGood: isSelected ? '' : good,\n  });\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <main className=\"section container\">\n        { !selectedGood && <h1 className=\"title\">No goods selected</h1>}\n        {selectedGood\n          && (\n            <h1 className=\"title is-flex is-align-items-center\">\n              {selectedGood}\n              {' '}\n              is selected\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                data-cy=\"ClearButton\"\n                type=\"button\"\n                className=\"delete ml-3\"\n                onClick={() => this.setState({ selectedGood: '' })}\n              />\n            </h1>\n          )}\n        <table className=\"table\">\n          <tbody>\n            {goods.map((good) => {\n              const isSelected = selectedGood === good;\n\n              return (\n                <tr\n                  key={good}\n                  data-cy=\"Good\"\n                  className={classNames({\n                    'has-background-success-light': isSelected,\n                  })}\n                >\n                  <td>\n                    <button\n                      type=\"button\"\n                      onClick={() => this.selectedButton(isSelected, good)}\n                      className={classNames(\n                        'button',\n                        { 'is-info': isSelected },\n                      )}\n                      data-cy={isSelected\n                        ? 'RemoveButton'\n                        : 'AddButton'}\n                    >\n                      {isSelected ? '-' : '+'}\n                    </button>\n                  </td>\n                  <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                    {good}\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}